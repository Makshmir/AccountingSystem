@model dynamic

@{
    ViewData["Title"] = "Create";
}

<script type="text/javascript">
    var itemIndex = 1; // Початковий індекс для доданих товарів

    function createNewElement() {
        var lastSelect = document.querySelector('.select_item_to_sell:last-of-type');

        if (lastSelect && lastSelect.value.trim() === '') {
            return;
        }

        var txtNewInputBox = document.createElement('div');
        txtNewInputBox.className = "form-group";
        txtNewInputBox.id = `element${itemIndex}`;

        txtNewInputBox.innerHTML = `
                <select class="select_item_to_sell" onchange="updateMax(this); updateTotal();">
                    <option></option>
    @foreach (var item in Model.Items)
    {
                            <option value="@item.Id" data-price="@item.Price" data-available="@item.Available">
            @item.Name - @item.Price грн - @item.Available @item.Unit
                            </option>
    }
                </select>
                <input type="number" class="item_quantity_input" step="1" min="1" value="0" oninput="updateTotal();" />
                <button type="button" class="delete_btn" onclick="deleteElement('element${itemIndex}'); updateTotal();">Видалити</button>`;

        document.getElementById("inputFields").appendChild(txtNewInputBox);
        itemIndex++;
        updateIndexes();
    }

    function updateMax(select) {
        var selectedOption = select.options[select.selectedIndex];
        var availableQuantity = parseInt(selectedOption.getAttribute('data-available'));
        var quantityInput = select.nextElementSibling;
        quantityInput.max = availableQuantity;
    }

    function deleteElement(elementId) {
        var element = document.getElementById(elementId);
        if (element) {
            element.remove();
            updateIndexes(); // Оновити індекси після видалення елемента
        } else {
            console.error('Елемент з ID', elementId, 'не знайдено.');
        }
        updateTotal(); // Оновити загальну суму після видалення елемента
    }

    function updateIndexes() {
        var elements = document.querySelectorAll('.form-group');
        elements.forEach(function (element, index) {
            var select = element.querySelector('.select_item_to_sell');
            var quantityInput = element.querySelector('.item_quantity_input');
            select.name = `Items[${index}].Id`;
            quantityInput.name = `Items[${index}].Quantity`;
        });
    }

    function updateTotal() {
        var total = 0;
        var items = document.querySelectorAll('.select_item_to_sell');
        items.forEach(function (item) {
            var selectedOption = item.options[item.selectedIndex];
            var price = parseFloat(selectedOption.getAttribute('data-price'));
            var quantityInput = item.nextElementSibling;
            var quantity = parseFloat(quantityInput.value);
            if (!isNaN(price) && !isNaN(quantity)) {
                total += price * quantity;
            }
        });
        document.querySelector('.total_input').value = total.toFixed(2);
    }
</script>

<div class="container">
    <h1>Create</h1>

    <h4>Check</h4>
    <hr />
    <div class="row" id="row">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="inputFields">
                <div class="form-group" id="element0">
                    <select name="Items[0].Id" class="select_item_to_sell" onchange="updateMax(this); updateTotal();">
                        <option></option>
                        @foreach (var item in Model.Items)
                        {
                            <option value="@item.Id" data-price="@item.Price" data-available="@item.Available">
                                @item.Name - @item.Price грн - @item.Available @item.Unit
                            </option>
                        }
                    </select>
                    <input type="number" name="Items[0].Quantity" class="item_quantity_input" step="0.1" min="0.1" value="0" oninput="updateTotal();" />
                    <button type="button" class="delete_btn" onclick="deleteElement('element0'); updateTotal();">Видалити</button>
                </div>
            </div>
            <div id="dynamicCheck">
                <input type="button" value="Додати" onclick="createNewElement();" class="add_button" />
            </div>
            <button type="submit" class="submit_button">Створити</button>
        </form>
    </div>

    <div class="sum">
        <p>Усього:</p>
        <input type="number" readonly value="0" class="total_input" />
    </div>

    <div>
        <a asp-action="Index" class="back_link">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
