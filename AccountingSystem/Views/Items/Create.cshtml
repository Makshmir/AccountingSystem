@model dynamic
@{
    ViewData["Title"] = "Create";
}

<h1>Створення товару</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="Create" class="form_row">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label> Назва товару</label>
                <input name="Items.Name" value="@Model.Items.Name" class="form-control" />
                <span class="text-danger"></span>
            </div>

            <div class="input_group">
                <div class="form-group">
                    <label>Категорія</label>
                    <input name="Items.Category" value="@Model.Items.Category" class="form-control" />
                    <span class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label>Одиниці виміру</label>
                    <select name="Items.Unit" class="form-control">
                        <option value="Шт">Шт</option>
                        <option value="Кг">Кг</option>
                        <option value="Л">Л</option>
                    </select>
                    <span class="text-danger"></span>
                </div>
            </div>

            <div class="input_group">
                <div class="form-group">
                    <label>Залишок на складі</label>
                    <input name="Items.Available" type="number" value="@Model.Items.Available" class="form-control" />
                    <span class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Штрих-код</label>
                    <input name="Items.Barcode" value="@Model.Items.Barcode" class="form-control" />
                    <span class="text-danger"></span>
                </div>
            </div>

            <div class="input_group">
                <div class="form-group">
                    <label> Ціна закупівлі</label>
                    <input name="Items.PurchPrice" type="number" step="0.01" value="@Model.Items.PurchPrice" class="form-control" />
                </div>

                <div class="form-group">
                    <label> Ціна продажу</label>
                    <input name="Items.Price" type="number" step="0.01" value="@Model.Items.Price" class="form-control" />
                </div>
            </div>

            <div class="input_group">
                <div class="form-group">
                    <label>Знижка (%)</label>
                    <input  type="number" class="form-control" id="discount" name="Items.Discount" />
                </div>

                <div class="form-group">
                    <label>Ціна після знижки</label>
                    <input type="number" class="form-control" readonly id="discountedPrice" name="Items.DiscountedPrice" />
                </div>
            </div>
            <div class="input_group">
                <div class="form-group">
                    <label> Націнка</label>
                    <input readonly type="number" class="form-control" id="markupPriceNumeric" name="Items.MarkupPriceNumeric" />
                </div>

                <div class="form-group">
                    <label>Націнка %</label>
                    <input readonly type="number" class="form-control" id="markupPriceInterest" name="Items.MarkupPriceInterest" />
                </div>
            </div>

            <div class="form-group">
                <label> Постачальник</label>
                <select name="Items.SupplierId" class="form-control">
                    <option value="">Виберіть постачальника</option>
                    @foreach (var supplier in Model.Supplier)
                    {
                        <option value="@supplier.Id">@supplier.Name @supplier.ContactNumber</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label>Фото</label>
                <input name="Items.ImageUrl" value="@Model.Items.ImageUrl" class="form-control" />
                <span class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Створити" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Повернутись</a>
</div>

@section Scripts {
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var priceInput = document.querySelector('input[name="Items.Price"]');
            var discountInput = document.querySelector('input[name="Items.Discount"]');
            var discountedPriceInput = document.querySelector('input[name="Items.DiscountedPrice"]');
            var purchPriceInput = document.querySelector('input[name="Items.PurchPrice"]');
            var markupPriceNumericInput = document.querySelector('input[name="Items.MarkupPriceNumeric"]');
            var markupPriceInterestInput = document.querySelector('input[name="Items.MarkupPriceInterest"]');

            function updateDiscountedPrice() {
                var price = parseFloat(priceInput.value);
                var discount = parseFloat(discountInput.value);
                if (!isNaN(price) && !isNaN(discount)) {
                    var discountedPrice = price - (price * (discount / 100));
                    discountedPriceInput.value = discountedPrice.toFixed(2);
                    updateMarkup(discountedPrice);
                } else {
                    discountedPriceInput.value = '';
                }
            }

            function updateMarkup(discountedPrice) {
                var purchPrice = parseFloat(purchPriceInput.value);
                if (!isNaN(discountedPrice) && !isNaN(purchPrice)) {
                    var markup = discountedPrice - purchPrice;
                    var markupPercent = (purchPrice !== 0) ? ((markup / purchPrice) * 100) : 0;

                    markupPriceNumericInput.value = markup.toFixed(2);
                    markupPriceInterestInput.value = markupPercent.toFixed(2);
                } else {
                    markupPriceNumericInput.value = '';
                    markupPriceInterestInput.value = '';
                }
            }

            priceInput.addEventListener('input', updateDiscountedPrice);
            discountInput.addEventListener('input', updateDiscountedPrice);
            purchPriceInput.addEventListener('input', function () {
                var discountedPrice = parseFloat(discountedPriceInput.value);
                if (!isNaN(discountedPrice)) {
                    updateMarkup(discountedPrice);
                }
            });

            updateDiscountedPrice();
        });
    </script>
}
