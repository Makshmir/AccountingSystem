@model AccountingSystem.Models.ItemViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Редагувати</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" class="edit_form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="Item.Id" />
            <input type="hidden" asp-for="Item.UserId" value=Item.UserId />

            <div class="form-group">
                <label> Назва товару</label>
                <input asp-for="Item.Name" class="form-control" />
                <span asp-validation-for="Item.Name" class="text-danger"></span>
            </div>
            <div class="input_group">
                <div class="form-group">
                    <label>Категорія</label>
                    <input asp-for="Item.Category" class="form-control" />
                    <span asp-validation-for="Item.Category" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label>Одиниці виміру</label>
                    <select asp-for="Item.Unit" class="form-control">
                        <option value="Шт">Шт</option>
                        <option value="Кг">Кг</option>
                        <option value="Л">Л</option>
                    </select>
                    <span asp-validation-for="Item.Unit" class="text-danger"></span>
                </div>
            </div>

            <div class="input_group">
                <div class="form-group">
                    <label>Залишок на складі</label>
                    <input asp-for="Item.Available" type="number" class="form-control" />
                    <span asp-validation-for="Item.Available" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Штрих-код</label>
                    <input asp-for="Item.Barcode" class="form-control" />
                    <span asp-validation-for="Item.Barcode" class="text-danger"></span>
                </div>
            </div>

            <div class="input_group">
                <div class="form-group">
                    <label> Ціна закупівлі</label>
                    <input asp-for="Item.PurchPrice" type="number" class="form-control" id="purchPrice" />
                    <span asp-validation-for="Item.PurchPrice" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label> Ціна продажу</label>
                    <input asp-for="Item.Price" type="number" class="form-control" id="price" />
                    <span asp-validation-for="Item.Price" class="text-danger"></span>
                </div>
            </div>
            <div class="input_group">
                <div class="form-group">
                    <label>Знижка (%)</label>
                    <input asp-for="Item.Discount" type="number" class="form-control" id="discount" />
                    <span asp-validation-for="Item.Discount" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Ціна після знижки</label>
                    <input asp-for="Item.DiscountedPrice" type="number" class="form-control" readonly id="discountedPrice" />
                    <span asp-validation-for="Item.DiscountedPrice" class="text-danger"></span>
                </div>
            </div>
            <div class="input_group">
                <div class="form-group">
                    <label> Націнка</label>
                    <input asp-for="Item.MarkupPriceNumeric" readonly type="number" class="form-control" id="markupPriceNumeric" />
                    <span asp-validation-for="Item.MarkupPriceNumeric" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Націнка %</label>
                    <input asp-for="Item.MarkupPriceInterest" readonly type="number" class="form-control" id="markupPriceInterest" />
                    <span asp-validation-for="Item.MarkupPriceInterest" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label>Постачальник</label>
                <select asp-for="Item.SupplierId" class="form-control">
                    <option value="">Оберіть постачальника</option>
                    @foreach (var supplier in Model.Suppliers)
                    {
                        <option value="@supplier.Id">@supplier.Name</option>
                    }
                </select>
                <span asp-validation-for="Item.SupplierId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Фото</label>
                <input asp-for="Item.ImageUrl" class="form-control" />
                <span asp-validation-for="Item.ImageUrl" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Повернутись</a>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var priceInput = document.querySelector('input[name="Item.Price"]');
            var discountInput = document.querySelector('input[name="Item.Discount"]');
            var discountedPriceInput = document.querySelector('input[name="Item.DiscountedPrice"]');
            var purchPriceInput = document.querySelector('input[name="Item.PurchPrice"]');
            var markupPriceNumericInput = document.querySelector('input[name="Item.MarkupPriceNumeric"]');
            var markupPriceInterestInput = document.querySelector('input[name="Item.MarkupPriceInterest"]');

            function updateDiscountedPrice() {
                var price = parseFloat(priceInput.value);
                var discount = parseFloat(discountInput.value);
                if (!isNaN(price) && !isNaN(discount)) {
                    var discountedPrice = price - (price * (discount / 100));
                    discountedPriceInput.value = discountedPrice.toFixed(2);
                    updateMarkup(discountedPrice);
                } else {
                    discountedPriceInput.value = '';
                }
            }

            function updateMarkup(discountedPrice) {
                var purchPrice = parseFloat(purchPriceInput.value);
                if (!isNaN(discountedPrice) && !isNaN(purchPrice)) {
                    var markup = discountedPrice - purchPrice;
                    var markupPercent = (purchPrice !== 0) ? ((markup / purchPrice) * 100) : 0;

                    markupPriceNumericInput.value = markup.toFixed(2);
                    markupPriceInterestInput.value = markupPercent.toFixed(2);
                } else {
                    markupPriceNumericInput.value = '';
                    markupPriceInterestInput.value = '';
                }
            }

            priceInput.addEventListener('input', updateDiscountedPrice);
            discountInput.addEventListener('input', updateDiscountedPrice);
            purchPriceInput.addEventListener('input', function () {
                var discountedPrice = parseFloat(discountedPriceInput.value);
                if (!isNaN(discountedPrice)) {
                    updateMarkup(discountedPrice);
                }
            });

            // Initialize on load
            updateDiscountedPrice();
        });
    </script>
}
